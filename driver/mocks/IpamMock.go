// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	ipam "github.com/docker/go-plugins-helpers/ipam"
	mock "github.com/stretchr/testify/mock"
)

// IpamMock is an autogenerated mock type for the IpamMock type
type IpamMock struct {
	mock.Mock
}

// GetCapabilities provides a mock function with given fields:
func (_m *IpamMock) GetCapabilities() (*ipam.CapabilitiesResponse, error) {
	ret := _m.Called()

	var r0 *ipam.CapabilitiesResponse
	if rf, ok := ret.Get(0).(func() *ipam.CapabilitiesResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ipam.CapabilitiesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDefaultAddressSpaces provides a mock function with given fields:
func (_m *IpamMock) GetDefaultAddressSpaces() (*ipam.AddressSpacesResponse, error) {
	ret := _m.Called()

	var r0 *ipam.AddressSpacesResponse
	if rf, ok := ret.Get(0).(func() *ipam.AddressSpacesResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ipam.AddressSpacesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReleaseAddress provides a mock function with given fields: _a0
func (_m *IpamMock) ReleaseAddress(_a0 *ipam.ReleaseAddressRequest) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ipam.ReleaseAddressRequest) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReleasePool provides a mock function with given fields: _a0
func (_m *IpamMock) ReleasePool(_a0 *ipam.ReleasePoolRequest) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ipam.ReleasePoolRequest) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RequestAddress provides a mock function with given fields: _a0
func (_m *IpamMock) RequestAddress(_a0 *ipam.RequestAddressRequest) (*ipam.RequestAddressResponse, error) {
	ret := _m.Called(_a0)

	var r0 *ipam.RequestAddressResponse
	if rf, ok := ret.Get(0).(func(*ipam.RequestAddressRequest) *ipam.RequestAddressResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ipam.RequestAddressResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ipam.RequestAddressRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RequestPool provides a mock function with given fields: _a0
func (_m *IpamMock) RequestPool(_a0 *ipam.RequestPoolRequest) (*ipam.RequestPoolResponse, error) {
	ret := _m.Called(_a0)

	var r0 *ipam.RequestPoolResponse
	if rf, ok := ret.Get(0).(func(*ipam.RequestPoolRequest) *ipam.RequestPoolResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ipam.RequestPoolResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ipam.RequestPoolRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
