// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	types "github.com/projecteru2/barrel/types"
	mock "github.com/stretchr/testify/mock"
)

// ContainerVessel is an autogenerated mock type for the ContainerVessel type
type ContainerVessel struct {
	mock.Mock
}

// DeleteContainer provides a mock function with given fields: _a0, _a1
func (_m *ContainerVessel) DeleteContainer(_a0 context.Context, _a1 types.ContainerInfo) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.ContainerInfo) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListContainers provides a mock function with given fields:
func (_m *ContainerVessel) ListContainers() ([]types.ContainerInfo, error) {
	ret := _m.Called()

	var r0 []types.ContainerInfo
	if rf, ok := ret.Get(0).(func() []types.ContainerInfo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.ContainerInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateContainer provides a mock function with given fields: _a0, _a1
func (_m *ContainerVessel) UpdateContainer(_a0 context.Context, _a1 types.ContainerInfo) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.ContainerInfo) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
